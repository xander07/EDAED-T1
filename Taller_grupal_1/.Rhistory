# with(encuesta, plot(Q01_Genero, Q08_PAPA, notch = TRUE))
# with(encuesta, scatter.smooth(tiempo_usado, Q08_PAPA))
# with(encuesta, plot(Q27_PorcentDivisor))
# lines(1:nrow(encuesta), rep(pt_p2[3], nrow(encuesta)),
#       col = "red")
# enc_acert_p2 <- encuesta %>%
#   filter(puntaje_pregunta2 == 3)
# enc_no_acert_p2 <- encuesta %>%
#   filter(puntaje_pregunta2 != 3)
# op <- par(no.readonly = TRUE)
# par(mfrow = c(1, 2))
# prom_Q27 <- mean(enc_acert_p2$Q27)
# with(enc_acert_p2, plot(Q27_PorcentDivisor, ylim = c(0, 100)))
# lines(1:nrow(enc_acert_p2), rep(prom_Q27, nrow(enc_acert_p2)),
#       col = "red")
# prom_Q27_na <- mean(enc_no_acert_p2$Q27, na.rm = TRUE, ylim = c(0, 100))
# with(enc_no_acert_p2, plot(Q27_PorcentDivisor))
# lines(1:nrow(enc_no_acert_p2), rep(prom_Q27_na, nrow(enc_no_acert_p2)),
#       col = "red")
# par(op)
# encuesta_sist_estad <- encuesta %>%
#   filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
#                             "3 : Estadística")) %>%
#   droplevels()
#
# encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
#   group_by(Q03_Carrera) %>%
#   mutate(num_estud_carrera = n()) %>%
#   group_by(Carrera_instala, num_estud_carrera) %>%
#   summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
#             prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
#             desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
#   mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
# encuesta_sist_estad_resumen %>% data.frame()
# op <- par(no.readonly = TRUE)
# par(mar = op$mar + c(15, 0, 0, 0))
# with(encuesta_sist_estad,
#      plot(Carrera_instala, Q08_PAPA, notch = TRUE,
#           las = 2, width = sqrt(encuesta_sist_estad_resumen$porcent_x_carrera),
#           col = "lightblue",
#           main = "PAPA vs carrera e instalación de softwares R y RStudio",
#           ylab = "Promedio Académico Ponderado Acumulado",
#           xlab = "",
#           pch = 19))
# with(encuesta_sist_estad_resumen,
#      points(Carrera_instala, prom_PAPA,
#            col = "red", pch = 19))
# legend("topleft", legend = c("0 No instaló ni R ni RStudio",
#                              "1 Solo instaló R",
#                              "2 Solo instaló RStudio",
#                              "3 Instaló ambos"))
# legend(0.5, 3.4, legend = c("Promedio"),
#        pch = 19, col = "red")
# text(0.5, 3.1, "El ancho de las cajas es proporcional a la raíz cuadrada del porcentaje de los estudiantes en cada carrera",
#      cex = 0.8, pos = 4)
# par(op)
# encuesta_sist_estad <- encuesta %>%
#   filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
#                             "3 : Estadística")) %>%
#   droplevels()
#
# encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
#   group_by(Q03_Carrera) %>%
#   mutate(num_estud_carrera = n()) %>%
#   group_by(Carrera_instala, num_estud_carrera) %>%
#   summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
#             prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
#             desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
#   mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
# encuesta_sist_estad_resumen %>% data.frame()
# op <- par(no.readonly = TRUE)
# par(mar = op$mar + c(15, 0, 0, 0))
# with(encuesta_sist_estad,
#      plot(Carrera_instala, Q08_PAPA, notch = TRUE,
#           las = 2, width = sqrt(encuesta_sist_estad_resumen$porcent_x_carrera),
#           col = "lightblue",
#           main = "PAPA vs carrera e instalación de softwares R y RStudio",
#           ylab = "Promedio Académico Ponderado Acumulado",
#           xlab = "",
#           pch = 19))
# with(encuesta_sist_estad_resumen,
#      points(Carrera_instala, prom_PAPA,
#            col = "red", pch = 19))
# legend("topleft", legend = c("0 No instaló ni R ni RStudio",
#                              "1 Solo instaló R",
#                              "2 Solo instaló RStudio",
#                              "3 Instaló ambos"))
# legend(0.5, 3.4, legend = c("Promedio"),
#        pch = 19, col = "red")
# text(0.5, 3.1, "El ancho de las cajas es proporcional a la raíz cuadrada del porcentaje de los estudiantes en cada carrera",
#      cex = 0.8, pos = 4)
# par(op)
encuesta_sist_estad <- encuesta %>%
filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
"3 : Estadística")) %>%
droplevels()
encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
group_by(Q03_Carrera) %>%
mutate(num_estud_carrera = n()) %>%
group_by(Q03_Carrera, num_estud_carrera) %>%
summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
encuesta_sist_estad_resumen %>% data.frame()
boxplot(Q08_PAPA~ Q03_Carrera, data = encuesta_sist_estad, col = "bisque" , log = "y")
gen_edad <- data.frame(estrato_etiquetado,saber11,edad,encuesta$Q01_Genero)
gen_edad$edad[(gen_edad$edad <= 25)] <- 1
gen_edad$edad[(25 < gen_edad$edad & gen_edad$edad <= 32)] <- 2
gen_edad$edad[(32 < gen_edad$edad & gen_edad$edad <= 39)] <- 3
gen_edad <- gen_edad %>%
mutate(edad = as.character(gen_edad$edad))
gen_edad$edad[(gen_edad$edad == "1")] <- "Joven"
gen_edad$edad[(gen_edad$edad == "2")] <- "Adulto Joven"
gen_edad$edad[(gen_edad$edad == "3")] <- "Adulto"
#Seleccionamos los datos a analizar para la edad Joven
promedio_joven <- filter(gen_edad,edad=="Joven")
promedio_joven <- select(promedio_joven,estrato_etiquetado,saber11,edad)
promedio_joven <- promedio_joven %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Seleccionamos los datos a analizar para la edad Adulto Joven
promedio_adjoven <- filter(gen_edad,edad=="Adulto Joven")
promedio_adjoven <- select(promedio_adjoven,estrato_etiquetado,saber11,edad)
promedio_adjoven <- promedio_adjoven %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11, na.rm=TRUE))
#Añadimos 0 en la columna saber 11 para los estratos que no contiene
#Esto se hace para tener una matriz de la misma magnitud
otros <- data.frame(estrato_etiquetado = c("Alto","NA"),
promedio = c(0,0))
promedio_adjoven <- rbind(promedio_adjoven,otros)
#Seleccionamos los datos a analizar para la edad Adulto
promedio_adulto <- filter(gen_edad,edad=="Adulto")
promedio_adulto <- select(promedio_adulto,estrato_etiquetado,saber11,edad)
#Añadimos 0 en la columna saber 11 para los estratos que no contiene
#Esto se hace para tener una matriz de la misma magnitud
otro <- data.frame(estrato_etiquetado = c("Bajo","Alto","NA"),
saber11 = c(0,0,0),
edad=c("Adulto","Adulto","Adulto"))
promedio_adulto <- rbind(promedio_adulto,otro)
promedio_adulto <- promedio_adulto %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11,na.rm=TRUE))
View(promedio_adulto)
#Unificamos todo en una sola matriz
tabla_general <- rbind(c(promedio_joven$promedio),
c(promedio_adjoven$promedio),
c(promedio_adulto$promedio))
#Le damos nombre a las columnas y filas
colnames(tabla_general) = c("Bajo","Medio","Alto","NA")
rownames(tabla_general) = c("Joven","Adulto Joven","Adulto")
tabla_general
barplot(tabla_general, beside = T,
col = c("Orange","Yellow","Blue"),
legend.text = row.names(tabla_general),
ylim = c(0,500),
xlim = c(0,20),
main="SABER11xEDADxESTRATO",
xlab = "Estrato Socioeconómico",
ylab= "Promedio Saber 11")
View(encuesta)
View(gen_edad)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE)
## Paquetes usados en el análisis.
library(tidyverse)
## Lectura de una base de datos tipo ".csv"
encuesta <- read.csv("encuesta1.csv")
## Vista de la estructura general de la BD.
glimpse(encuesta)
summary(encuesta)
## Convertimos la variable Enviado.el. a tipo POSIXct (DATE TIME)
encuesta <- encuesta %>%
mutate(Enviado.el. = as.POSIXct(strptime(Enviado.el., format = "%d/%m/%Y %H:%M:%S")))
## Convertimos la variable Q02_FechaNac a tipo DATE
encuesta <- encuesta %>%
mutate(Q02_FechaNac = as.Date(as.character(Q02_FechaNac), "%Y-%m-%d"))
## Convertimos la variable Q07_FechaSaber11 a tipo DATE
encuesta <- encuesta %>%
mutate(Q07_FechaSaber11 = as.Date(as.character(Q07_FechaSaber11),"%Y-%m-%d"))
encuesta <- encuesta %>% mutate_if(is.character, as.factor)
estrato_etiquetado <- encuesta$Q10_Estrato
estrato_etiquetado = factor(estrato_etiquetado,
levels = levels(estrato_etiquetado),
labels = c("Bajo","Bajo","Medio","Medio","Alto",NA),
ordered = F)
encuesta <- encuesta %>%
mutate(Q10_Estrato = as.character(encuesta$Q10_Estrato))
encuesta$Q10_Estrato[(encuesta$Q10_Estrato ==	 "2 : 1" |  encuesta$Q10_Estrato == "3 : 2")] <- "Bajo"
encuesta$Q10_Estrato[(encuesta$Q10_Estrato ==	 "4 : 3" |  encuesta$Q10_Estrato == "5 : 4")] <- "Medio"
encuesta$Q10_Estrato[(encuesta$Q10_Estrato ==	 "6 : 5"  )] <- "Alto"
encuesta$Q10_Estrato[(encuesta$Q10_Estrato ==	 "8 : No se conoce"  )] <- NA
encuesta <- encuesta %>%
mutate(Q10_Estrato = as.factor(encuesta$Q10_Estrato))
encuesta$Q08_PAPA[encuesta$Q08_PAPA == 45 & !is.na(encuesta$Q08_PAPA)] <- 4.5
saber11 <- vector("integer", length(encuesta$Q05_Saber11))
for(i in seq_along(encuesta$Q07_FechaSaber11)){
valor<-0
if(!is.na(encuesta$Q05_Saber11[[i]]) & encuesta$Q07_FechaSaber11[[i]] < as.Date("2000-01-01")) {
valor <- (5*(encuesta$Q05_Saber11[[i]]-100))/3
if(valor >= 0 & valor <= 500){
saber11[[i]] <- round(valor,0)
} else {
saber11[[i]] <- encuesta$Q05_Saber11[[i]]
}
} else if(!is.na(encuesta$Q05_Saber11[[i]]) & encuesta$Q07_FechaSaber11[[i]] >= as.Date("2000-01-01") &
encuesta$Q07_FechaSaber11[[i]] < as.Date("2012-01-01")){
valor <- encuesta$Q05_Saber11[[i]]*5
if(valor >= 0 & valor <= 500){
saber11[[i]] <- valor
} else {
saber11[[i]] <- encuesta$Q05_Saber11[[i]]
}
} else if(!is.na(encuesta$Q05_Saber11[[i]]) & encuesta$Q07_FechaSaber11[[i]] >= as.Date("2012-01-01")){
saber11[[i]] <- encuesta$Q05_Saber11[[i]]
} else{
saber11[[i]] <- encuesta$Q05_Saber11[[i]]
}
}
encuesta$Q05_Saber11 = saber11
# Cálculo de la edad
edad <- as.numeric(as.Date("2021-06-30") - encuesta$Q02_FechaNac)/365.25
## Creamos la variable area que contiene la variable Q24_area etiquetada como "Correcto/Incorrecto"
area <- encuesta$Q24_area
area = factor(area,
levels = levels(area),
labels = c("Incorrecto","Incorrecto","Incorrecto","Correcto","Incorrecto","Incorrecto"),
ordered = F)
## Creamos la variable divisor que contiene la variable Q26_Divisor etiquetada como "Correcto/Incorrecto".
divisor = if_else(encuesta$Q26_Divisor..f.es.divisor.de.g.2.==1 & encuesta$Q26_Divisor..f.es.divisor.de.gh.==1 & encuesta$Q26_Divisor..f.es.divisor.de.h.g==1, "Correcto", "Incorrecto")
divisor
encuesta <- encuesta %>%
mutate(Q01_Genero = as.character(encuesta$Q01_Genero))
encuesta$Q01_Genero[encuesta$Q01_Genero ==	 "1 : Masculino" ] <- "Masculino"
encuesta$Q01_Genero[encuesta$Q01_Genero ==	 "2 : Femenino" ] <- "Femenino"
encuesta$Q01_Genero[encuesta$Q01_Genero ==	 "3 : Otro" ] <- "Otro"
encuesta <- encuesta %>%
mutate(Q01_Genero = as.factor(encuesta$Q01_Genero))
glimpse(encuesta)
summary(encuesta)
# t_gen <- table(encuesta$Q01_Genero)
# t_gen
# ```
# ```{r}
# t_gen_p <- t_gen / sum(t_gen) * 100
# t_gen_p
# bp1 <- barplot(t_gen_p, las = 1, ylim = c(0, 100), col = "lightgreen")
# text(bp1, t_gen_p + 10, paste(round(t_gen_p, 1), "%"))
# m_gen_p <- as.matrix(t_gen_p)
# bp2 <- barplot(m_gen_p, beside = FALSE, xlim = c(0, 4),
#                ylim = c(0, 110),
#                col = c("blue", "red", "green3"))
# text(1.3, cumsum(m_gen_p) - m_gen_p/2,
#      paste(rownames(m_gen_p), round((m_gen_p), 1), "%"),
#      adj = 0)
# pie(t_gen_p, labels = paste(names(t_gen_p), round(t_gen_p, 1), "%"),
#     col = c("blue", "red", "green3"))
# summary(encuesta$Edad)
##hist(encuesta$Edad)
##hist(encuesta$Edad, nclass = 20)
# paramAnt <- par(no.readonly = TRUE)
# hist(encuesta$Edad, freq = FALSE, nclass = 20, col = "#a0c39f",
#      las = 1,
#      main = "Distribución de la edad",
#      xlab = "Edad (años)",
#      ylab = "Densidad",
#      ylim = c(0, 0.20),
#      xlim = c(15, 40))
# lines(density(encuesta$Edad), col = "orange", lwd = 3)
# rug(encuesta$Edad)
# par(paramAnt)
# promedioEdad <- mean(encuesta$Edad)
# medianaEdad <- median(encuesta$Edad)
# desv_Est_Edad <- sd(encuesta$Edad)
#
# boxplot(encuesta$Edad, horizontal = TRUE,
#         main = "Boxplot para edad",
#         col = "lightblue",
#         pch = 19, notch = TRUE)
# points(promedioEdad,
#        1,
#        pch = 19,
#        col = c("red", "purple"))
# legend("topright",
#        title = "Convención",
#        legend = c("Promedio", "Error estandard"),
#        col = "red",
#        pch = c(19, NA),
#        lty = c(NA, 1))
# arrows(promedioEdad -  desv_Est_Edad / sqrt(nrow(encuesta)), 1,
#          promedioEdad + desv_Est_Edad / sqrt(nrow(encuesta)), 1,
#          angle = 90,
#          length = 0.1,
#          code = 3,
#          col = "red")
#with(encuesta, plot(Q10_Estrato, Q08_PAPA, notch = TRUE))
#encuesta_Estrato1 <- encuesta %>%
#filter(Q10_Estrato == "bajo")
#dotchart(encuesta_Estrato1$Q08_PAPA)
#summary(encuesta_Estrato1$Q08_PAPA)
# with(encuesta, plot(Q01_Genero, Q08_PAPA, notch = TRUE))
# with(encuesta, scatter.smooth(tiempo_usado, Q08_PAPA))
# with(encuesta, plot(Q27_PorcentDivisor))
# lines(1:nrow(encuesta), rep(pt_p2[3], nrow(encuesta)),
#       col = "red")
# enc_acert_p2 <- encuesta %>%
#   filter(puntaje_pregunta2 == 3)
# enc_no_acert_p2 <- encuesta %>%
#   filter(puntaje_pregunta2 != 3)
# op <- par(no.readonly = TRUE)
# par(mfrow = c(1, 2))
# prom_Q27 <- mean(enc_acert_p2$Q27)
# with(enc_acert_p2, plot(Q27_PorcentDivisor, ylim = c(0, 100)))
# lines(1:nrow(enc_acert_p2), rep(prom_Q27, nrow(enc_acert_p2)),
#       col = "red")
# prom_Q27_na <- mean(enc_no_acert_p2$Q27, na.rm = TRUE, ylim = c(0, 100))
# with(enc_no_acert_p2, plot(Q27_PorcentDivisor))
# lines(1:nrow(enc_no_acert_p2), rep(prom_Q27_na, nrow(enc_no_acert_p2)),
#       col = "red")
# par(op)
# encuesta_sist_estad <- encuesta %>%
#   filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
#                             "3 : Estadística")) %>%
#   droplevels()
#
# encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
#   group_by(Q03_Carrera) %>%
#   mutate(num_estud_carrera = n()) %>%
#   group_by(Carrera_instala, num_estud_carrera) %>%
#   summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
#             prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
#             desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
#   mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
# encuesta_sist_estad_resumen %>% data.frame()
# op <- par(no.readonly = TRUE)
# par(mar = op$mar + c(15, 0, 0, 0))
# with(encuesta_sist_estad,
#      plot(Carrera_instala, Q08_PAPA, notch = TRUE,
#           las = 2, width = sqrt(encuesta_sist_estad_resumen$porcent_x_carrera),
#           col = "lightblue",
#           main = "PAPA vs carrera e instalación de softwares R y RStudio",
#           ylab = "Promedio Académico Ponderado Acumulado",
#           xlab = "",
#           pch = 19))
# with(encuesta_sist_estad_resumen,
#      points(Carrera_instala, prom_PAPA,
#            col = "red", pch = 19))
# legend("topleft", legend = c("0 No instaló ni R ni RStudio",
#                              "1 Solo instaló R",
#                              "2 Solo instaló RStudio",
#                              "3 Instaló ambos"))
# legend(0.5, 3.4, legend = c("Promedio"),
#        pch = 19, col = "red")
# text(0.5, 3.1, "El ancho de las cajas es proporcional a la raíz cuadrada del porcentaje de los estudiantes en cada carrera",
#      cex = 0.8, pos = 4)
# par(op)
# encuesta_sist_estad <- encuesta %>%
#   filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
#                             "3 : Estadística")) %>%
#   droplevels()
#
# encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
#   group_by(Q03_Carrera) %>%
#   mutate(num_estud_carrera = n()) %>%
#   group_by(Carrera_instala, num_estud_carrera) %>%
#   summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
#             prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
#             desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
#   mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
# encuesta_sist_estad_resumen %>% data.frame()
# op <- par(no.readonly = TRUE)
# par(mar = op$mar + c(15, 0, 0, 0))
# with(encuesta_sist_estad,
#      plot(Carrera_instala, Q08_PAPA, notch = TRUE,
#           las = 2, width = sqrt(encuesta_sist_estad_resumen$porcent_x_carrera),
#           col = "lightblue",
#           main = "PAPA vs carrera e instalación de softwares R y RStudio",
#           ylab = "Promedio Académico Ponderado Acumulado",
#           xlab = "",
#           pch = 19))
# with(encuesta_sist_estad_resumen,
#      points(Carrera_instala, prom_PAPA,
#            col = "red", pch = 19))
# legend("topleft", legend = c("0 No instaló ni R ni RStudio",
#                              "1 Solo instaló R",
#                              "2 Solo instaló RStudio",
#                              "3 Instaló ambos"))
# legend(0.5, 3.4, legend = c("Promedio"),
#        pch = 19, col = "red")
# text(0.5, 3.1, "El ancho de las cajas es proporcional a la raíz cuadrada del porcentaje de los estudiantes en cada carrera",
#      cex = 0.8, pos = 4)
# par(op)
encuesta_sist_estad <- encuesta %>%
filter(Q03_Carrera %in% c("2 : Ingeniería de sistemas e informática",
"3 : Estadística")) %>%
droplevels()
encuesta_sist_estad_resumen <- encuesta_sist_estad %>%
group_by(Q03_Carrera) %>%
mutate(num_estud_carrera = n()) %>%
group_by(Q03_Carrera, num_estud_carrera) %>%
summarise(num_estud_noNA = sum(!is.na(Q08_PAPA)),
prom_PAPA = mean(Q08_PAPA, na.rm = TRUE),
desv_PAPA = sd(Q08_PAPA, na.rm = TRUE)) %>%
mutate(porcent_x_carrera = num_estud_noNA / num_estud_carrera * 100)
encuesta_sist_estad_resumen %>% data.frame()
boxplot(Q08_PAPA~ Q03_Carrera, data = encuesta_sist_estad, col = "bisque" , log = "y")
gen_edad <- data.frame(estrato_etiquetado,saber11,edad,encuesta$Q01_Genero)
#Aquí filtramos los datos ya que el NA no debe ser tenido en cuenta
gen_edad <- filter(gen_edad,estrato_etiquetado == "Bajo" |
estrato_etiquetado == "Medio" |
estrato_etiquetado == "Alto")
gen_edad$edad[(gen_edad$edad <= 25)] <- 1
gen_edad$edad[(25 < gen_edad$edad & gen_edad$edad <= 32)] <- 2
gen_edad$edad[(32 < gen_edad$edad & gen_edad$edad <= 39)] <- 3
gen_edad <- gen_edad %>%
mutate(edad = as.character(gen_edad$edad))
gen_edad$edad[(gen_edad$edad == "1")] <- "Joven"
gen_edad$edad[(gen_edad$edad == "2")] <- "Adulto Joven"
gen_edad$edad[(gen_edad$edad == "3")] <- "Adulto"
#Seleccionamos los datos a analizar para la edad Joven
promedio_joven <- filter(gen_edad,edad=="Joven")
promedio_joven <- select(promedio_joven,estrato_etiquetado,saber11,edad)
promedio_joven <- promedio_joven %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Seleccionamos los datos a analizar para la edad Adulto Joven
promedio_adjoven <- filter(gen_edad,edad=="Adulto Joven")
promedio_adjoven <- select(promedio_adjoven,estrato_etiquetado,saber11,edad)
promedio_adjoven <- promedio_adjoven %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Añadimos 0 en la columna saber 11 para los estratos que no contiene
#Esto se hace para tener una matriz de la misma magnitud
otros <- data.frame(estrato_etiquetado = c("Alto"),
promedio = c(0))
promedio_adjoven <- rbind(promedio_adjoven,otros)
#Seleccionamos los datos a analizar para la edad Adulto
promedio_adulto <- filter(gen_edad,edad=="Adulto")
promedio_adulto <- select(promedio_adulto,estrato_etiquetado,saber11,edad)
#Añadimos 0 en la columna saber 11 para los estratos que no contiene
#Esto se hace para tener una matriz de la misma magnitud
otro <- data.frame(estrato_etiquetado = c("Bajo","Alto"),
saber11 = c(0,0),
edad=c("Adulto","Adulto"))
promedio_adulto <- rbind(promedio_adulto,otro)
promedio_adulto <- promedio_adulto %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Unificamos todo en una sola matriz
tabla_general <- rbind(c(promedio_joven$promedio),
c(promedio_adjoven$promedio),
c(promedio_adulto$promedio))
#Le damos nombre a las columnas y filas
colnames(tabla_general) = c("Bajo","Medio","Alto")
rownames(tabla_general) = c("Joven","Adulto Joven","Adulto")
tabla_general
barplot(tabla_general, beside = T,
col = c("Orange","Yellow","Blue"),
legend.text = row.names(tabla_general),
ylim = c(0,500),
xlim = c(0,15),
main="SABER11xEDADxESTRATO",
xlab = "Estrato Socioeconómico",
ylab= "Promedio Saber 11")
#Seleccionamos los datos de acuerdo al género Femenino
promedio_mujer <- filter(gen_edad,encuesta.Q01_Genero =="Femenino")
promedio_mujer <- select(promedio_mujer,estrato_etiquetado,saber11)
promedio_mujer <- promedio_mujer %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Añadimos 0 al promedio de mujeres en estrato Alto para que todos los dataframes
#Tengan la misma dimensión
ot <- data.frame(estrato_etiquetado = c("Alto"),
promedio = c(0))
promedio_mujer <- rbind(promedio_mujer,ot)
#Seleccionamos los datos de acuerdo al género Masculino
promedio_hombre <- filter(gen_edad,encuesta.Q01_Genero =="Masculino")
promedio_hombre <- select(promedio_hombre,estrato_etiquetado,saber11)
promedio_hombre <- promedio_hombre %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Seleccionamos los datos de acuerdo al género Otro
promedio_otro <- filter(gen_edad,encuesta.Q01_Genero == "Otro")
promedio_otro <- select(promedio_otro,estrato_etiquetado,saber11)
#Añadimos 0 al promedio de Otro en estrato Bajo y Alto para que todos los dataframes
# tengan la misma dimensión
oter <- data.frame(estrato_etiquetado = c("Bajo","Alto"),
saber11 = c(0,0)
)
promedio_otro <- rbind(promedio_otro,oter)
promedio_otro <- promedio_otro %>%
group_by(estrato_etiquetado)%>%
summarise(promedio=mean(saber11))
#Unificamos todo en una sola matriz
tabla_generos <- rbind(c(promedio_hombre$promedio),
c(promedio_mujer$promedio),
c(promedio_otro$promedio))
#Le damos nombre a las columnas y filas
colnames(tabla_generos) = c("Bajo","Medio","Alto")
rownames(tabla_generos) = c("Hombre","Mujer","Otro")
tabla_generos
barplot(tabla_generos, beside = T,
col = c("Green","Purple","Black"),
legend.text = row.names(tabla_generos),
ylim = c(0,500),
xlim = c(0,15),
main="SABER11xGENEROxESTRATO",
xlab = "Estrato Socioeconómico",
ylab= "Promedio Saber 11")
